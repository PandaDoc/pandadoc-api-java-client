/*
 * PandaDoc Public API
 * PandaDoc Public API documentation
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pandadoc.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pandadoc.client.models.DocumentCreateByTemplateRequestContentLibraryItems;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DocumentCreateByTemplateRequestContentPlaceholders
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DocumentCreateByTemplateRequestContentPlaceholders {
  public static final String SERIALIZED_NAME_CONTENT_LIBRARY_ITEMS = "content_library_items";
  @SerializedName(SERIALIZED_NAME_CONTENT_LIBRARY_ITEMS)
  private List<DocumentCreateByTemplateRequestContentLibraryItems> contentLibraryItems = null;

  public static final String SERIALIZED_NAME_BLOCK_ID = "block_id";
  @SerializedName(SERIALIZED_NAME_BLOCK_ID)
  private String blockId;

  public DocumentCreateByTemplateRequestContentPlaceholders() { 
  }

  public DocumentCreateByTemplateRequestContentPlaceholders contentLibraryItems(List<DocumentCreateByTemplateRequestContentLibraryItems> contentLibraryItems) {
    
    this.contentLibraryItems = contentLibraryItems;
    return this;
  }

  public DocumentCreateByTemplateRequestContentPlaceholders addContentLibraryItemsItem(DocumentCreateByTemplateRequestContentLibraryItems contentLibraryItemsItem) {
    if (this.contentLibraryItems == null) {
      this.contentLibraryItems = new ArrayList<>();
    }
    this.contentLibraryItems.add(contentLibraryItemsItem);
    return this;
  }

   /**
   * Get contentLibraryItems
   * @return contentLibraryItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DocumentCreateByTemplateRequestContentLibraryItems> getContentLibraryItems() {
    return contentLibraryItems;
  }


  public void setContentLibraryItems(List<DocumentCreateByTemplateRequestContentLibraryItems> contentLibraryItems) {
    this.contentLibraryItems = contentLibraryItems;
  }


  public DocumentCreateByTemplateRequestContentPlaceholders blockId(String blockId) {
    
    this.blockId = blockId;
    return this;
  }

   /**
   * Get blockId
   * @return blockId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Content Placeholder 1", required = true, value = "")

  public String getBlockId() {
    return blockId;
  }


  public void setBlockId(String blockId) {
    this.blockId = blockId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentCreateByTemplateRequestContentPlaceholders documentCreateByTemplateRequestContentPlaceholders = (DocumentCreateByTemplateRequestContentPlaceholders) o;
    return Objects.equals(this.contentLibraryItems, documentCreateByTemplateRequestContentPlaceholders.contentLibraryItems) &&
        Objects.equals(this.blockId, documentCreateByTemplateRequestContentPlaceholders.blockId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentLibraryItems, blockId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentCreateByTemplateRequestContentPlaceholders {\n");
    sb.append("    contentLibraryItems: ").append(toIndentedString(contentLibraryItems)).append("\n");
    sb.append("    blockId: ").append(toIndentedString(blockId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

