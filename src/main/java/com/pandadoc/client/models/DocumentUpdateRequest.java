/*
 * PandaDoc Public API
 * PandaDoc Public API documentation
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pandadoc.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pandadoc.client.models.DocumentCreateByTemplateRequestTokens;
import com.pandadoc.client.models.DocumentUpdateRequestRecipients;
import com.pandadoc.client.models.PricingTableRequest;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DocumentUpdateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DocumentUpdateRequest {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RECIPIENTS = "recipients";
  @SerializedName(SERIALIZED_NAME_RECIPIENTS)
  private List<DocumentUpdateRequestRecipients> recipients = null;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private Object fields;

  public static final String SERIALIZED_NAME_TOKENS = "tokens";
  @SerializedName(SERIALIZED_NAME_TOKENS)
  private List<DocumentCreateByTemplateRequestTokens> tokens = null;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata;

  public static final String SERIALIZED_NAME_PRICING_TABLES = "pricing_tables";
  @SerializedName(SERIALIZED_NAME_PRICING_TABLES)
  private List<PricingTableRequest> pricingTables = null;

  public DocumentUpdateRequest() { 
  }

  public DocumentUpdateRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the document.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Contract", value = "The name of the document.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public DocumentUpdateRequest recipients(List<DocumentUpdateRequestRecipients> recipients) {
    
    this.recipients = recipients;
    return this;
  }

  public DocumentUpdateRequest addRecipientsItem(DocumentUpdateRequestRecipients recipientsItem) {
    if (this.recipients == null) {
      this.recipients = new ArrayList<>();
    }
    this.recipients.add(recipientsItem);
    return this;
  }

   /**
   * The list of recipients you&#39;re sending the document to. The ID or email are required. If the ID is passed, an existing recipient will be updated. If the email is passed, a new recipient will be added to CC.
   * @return recipients
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of recipients you're sending the document to. The ID or email are required. If the ID is passed, an existing recipient will be updated. If the email is passed, a new recipient will be added to CC.")

  public List<DocumentUpdateRequestRecipients> getRecipients() {
    return recipients;
  }


  public void setRecipients(List<DocumentUpdateRequestRecipients> recipients) {
    this.recipients = recipients;
  }


  public DocumentUpdateRequest fields(Object fields) {
    
    this.fields = fields;
    return this;
  }

   /**
   * You may pass a list of fields/values which exist in a document. Please use &#x60;Merge Field&#x60; property of the fields like the key.
   * @return fields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"Like\":{\"value\":true},\"Delivery\":{\"value\":\"Same Day Delivery\"},\"Date\":{\"value\":\"2019-12-31T00:00:00.000Z\"}}", value = "You may pass a list of fields/values which exist in a document. Please use `Merge Field` property of the fields like the key.")

  public Object getFields() {
    return fields;
  }


  public void setFields(Object fields) {
    this.fields = fields;
  }


  public DocumentUpdateRequest tokens(List<DocumentCreateByTemplateRequestTokens> tokens) {
    
    this.tokens = tokens;
    return this;
  }

  public DocumentUpdateRequest addTokensItem(DocumentCreateByTemplateRequestTokens tokensItem) {
    if (this.tokens == null) {
      this.tokens = new ArrayList<>();
    }
    this.tokens.add(tokensItem);
    return this;
  }

   /**
   * You can pass a list of tokens/values. If a token name exists in a document then the value will be updated. Otherwise, a new token will be added to the document.
   * @return tokens
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "You can pass a list of tokens/values. If a token name exists in a document then the value will be updated. Otherwise, a new token will be added to the document.")

  public List<DocumentCreateByTemplateRequestTokens> getTokens() {
    return tokens;
  }


  public void setTokens(List<DocumentCreateByTemplateRequestTokens> tokens) {
    this.tokens = tokens;
  }


  public DocumentUpdateRequest metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * You can pass arbitrary data in the key-value format to associate custom information with a document. This information is returned in any API requests for the document details by id. If metadata exists in a document then the value will be updated. Otherwise, metadata will be added to the document.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"my_favorite_pet\":\"Cat\"}", value = "You can pass arbitrary data in the key-value format to associate custom information with a document. This information is returned in any API requests for the document details by id. If metadata exists in a document then the value will be updated. Otherwise, metadata will be added to the document.")

  public Object getMetadata() {
    return metadata;
  }


  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  public DocumentUpdateRequest pricingTables(List<PricingTableRequest> pricingTables) {
    
    this.pricingTables = pricingTables;
    return this;
  }

  public DocumentUpdateRequest addPricingTablesItem(PricingTableRequest pricingTablesItem) {
    if (this.pricingTables == null) {
      this.pricingTables = new ArrayList<>();
    }
    this.pricingTables.add(pricingTablesItem);
    return this;
  }

   /**
   * Get pricingTables
   * @return pricingTables
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PricingTableRequest> getPricingTables() {
    return pricingTables;
  }


  public void setPricingTables(List<PricingTableRequest> pricingTables) {
    this.pricingTables = pricingTables;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentUpdateRequest documentUpdateRequest = (DocumentUpdateRequest) o;
    return Objects.equals(this.name, documentUpdateRequest.name) &&
        Objects.equals(this.recipients, documentUpdateRequest.recipients) &&
        Objects.equals(this.fields, documentUpdateRequest.fields) &&
        Objects.equals(this.tokens, documentUpdateRequest.tokens) &&
        Objects.equals(this.metadata, documentUpdateRequest.metadata) &&
        Objects.equals(this.pricingTables, documentUpdateRequest.pricingTables);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, recipients, fields, tokens, metadata, pricingTables);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentUpdateRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    tokens: ").append(toIndentedString(tokens)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    pricingTables: ").append(toIndentedString(pricingTables)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

